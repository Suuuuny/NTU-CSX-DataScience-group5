password = "NO",
host = "localhost")
connect = dbConnect(MySQL(), dbname = "Librarian",username = "roots",
password = "",
host = "localhost")
connect = dbConnect(MySQL(), dbname = "Librarian",username = "roots",
password = "Weber181",
host = "localhost")
connect = dbConnect(MySQL(), dbname = "Librarian",username = "root",
password = "Weber181",
host = "localhost")
connect = dbConnect(MySQL(), dbname = "Librarian",username = "root",
password = "Weber181",
host = "Localhost")
connect = dbConnect(MySQL(), dbname = "rsqltest",username = "rsqltest", password = "rsqltest"
,host="172.104.116.92", port=3306)
dbListTables(connect)
View(connect)
library(RODBC)
library(dbConnect)
library(DBI)
library(gWidgets)
library(RMySQL)
library(xlsx)
connect = dbConnect(MySQL(), dbname = "rsqltest",username = "rsqltest", password = "rsqltest"
,host="172.104.116.92", port=3306)
dbListTables(connect)
library(ggplot2)
day_stop_time <- c(346.39, 299.14, 286.42, 263.45, 287.21, 279.45, 272.91, 345.86, 278.84, 272.06, 314.17, 296.17, 324.89, 273.44, 312.94, 321.64, 300.45, 281.20, 271.84, 274.48, 264.26, 303.91, 302.75, 276.28, 303.23, 411.28, 304.09, 345.36, 338.86, 322.36, 308.16)
jump_rate <- c(85.83, 85.47, 84.51, 85.54, 85.11, 86.21, 87.81, 85.31, 85.20, 84.20, 84.08, 84.70, 85.72, 86.58, 84.25, 83.28, 85.39, 85.59, 84.29, 86.64, 85.95, 84.48, 84.33, 86.99, 85.22, 86.22, 87.61, 87.61, 86.13, 85.31, 86.06)
library(ggplot2)
day_stop_time <- c(346.39, 299.14, 286.42, 263.45, 287.21, 279.45, 272.91, 345.86, 278.84, 272.06, 314.17, 296.17, 324.89, 273.44, 312.94, 321.64, 300.45, 281.20, 271.84, 274.48, 264.26, 303.91, 302.75, 276.28, 303.23, 411.28, 304.09, 345.36, 338.86, 322.36, 308.16)
jump_rate <- c(85.83, 85.47, 84.51, 85.54, 85.11, 86.21, 87.81, 85.31, 85.20, 84.20, 84.08, 84.70, 85.72, 86.58, 84.25, 83.28, 85.39, 85.59, 84.29, 86.64, 85.95, 84.48, 84.33, 86.99, 85.22, 86.22, 87.61, 87.61, 86.13, 85.31, 86.06)
day_df <- data.frame(day_stop_time, jump_rate)
d1 <- ggplot(day_df)+
geom_line(aes(y= day_df$day_stop_time), color = "red")+
geom_line(aes(y= day_df$jump_rate), color = "red")+
scale_color_discrete(name = "參數", labels = c("停留時間", "跳出率")) +
ggtitle("日全站報表-停留時間與跳出率比較")
d1
length(day_df$day_stop_time)
date <- c(1:31)
date
day_df <- data.frame(date, day_stop_time, jump_rate)
d1 <- ggplot(day_df, aes(day_df$date))+
geom_line(aes(y= day_df$day_stop_time), color = "red")+
geom_line(aes(y= day_df$jump_rate), color = "red")+
scale_color_discrete(name = "參數", labels = c("停留時間", "跳出率")) +
ggtitle("日全站報表-停留時間與跳出率比較")
d1
d1 <- ggplot(day_df, aes(date, day_stop_time))+
geom_line(aes(y= day_df$day_stop_time))+
ggtitle("日全站報表-停留時間")+
scale_x_continuous("日期", breaks = seq(1, 31)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d1
d1 <- ggplot(day_df, aes(date, day_stop_time))+
geom_line(aes(y= day_df$day_stop_time))+
ggtitle("日全站報表-停留時間")+
scale_x_continuous("日期", breaks = seq(1, 31, 5)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d1
d1 <- ggplot(day_df, aes(date, day_stop_time))+
geom_line(aes(y= day_df$day_stop_time))+
ggtitle("日全站報表-停留時間")+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d1
d1 <- ggplot(day_df, aes(date, day_stop_time))+
geom_line(aes(y= day_df$day_stop_time), color = "green4")+
ggtitle("日全站報表-停留時間")+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d1
d1 <- ggplot(day_df, aes(date, day_stop_time))+
geom_line(aes(y= day_df$day_stop_time), color = "green4")+
ggtitle("日全站報表-停留時間")+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d1
d2 <-ggplot(day_df, aes(date, jump_rate))+
geom_line(aes(y= day_df$jump_rate), color = "red4")+
ggtitle("日全站報表-跳出率")+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("跳出率%", breaks = seq(70, 100, 5))
d2
d2 <-ggplot(day_df, aes(date, jump_rate))+
geom_line(aes(y= day_df$jump_rate), color = "red4")+
ggtitle("日全站報表-跳出率")+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("跳出率%", breaks = seq(80, 90, 2))
d2
avg_brouse <- c(4.16,3.90,3.64,1.86,1.77,1.88,1.83,1.96,1.94,1.93,2.00,1.92,1.92,1.86,2.08,2.10,1.83,1.78,1.88,1.89,1.86,1.96,2.03,1.68,1.95,1.92,1.92,1.91,1.88,1.89,1.77)
length(avg_brouse)
vis_num <- c(4485,4825,5837,4745,5458,3760,4231,4188,3956,3906,3967,3958,4129,3973,4215,3660,4169,4302,3362,3112,3399,3603,3238,4404,2917,2754,2480,2661,3109,3106,4203)
length(vis_num)
day_df <- data.frame(date, avg_brouse, vis_num, day_stop_time, jump_rate)
d3 <- ggplot(day_df, aes(date, day_stop_time))+
geom_line()+
ggtitle("全站報表(日)-停留時間")+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d3
d3 <- ggplot(day_df, aes(date, day_stop_time))+
geom_line()+
ggtitle("全站報表(日)-停留時間")+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d3
d3 <- ggplot(day_df, aes(date, day_stop_time))+
geom_line()+
ggtitle("全站報表(日)-停留時間")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d3
d3 <- ggplot(day_df, aes(date, day_stop_time))+
geom_line()+
scale_color_manual(values=c("#CC6666"))+
ggtitle("全站報表(日)-停留時間")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d3
d3 <- ggplot(day_df, aes(date, day_stop_time), colours())+
geom_line(colour = "blue5")+
geom_point()+
ggtitle("全站報表(日)-停留時間")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d3
d3 <- ggplot(day_df, aes(date, day_stop_time), colours())+
geom_line(colour = "blue4")+
geom_point()+
ggtitle("全站報表(日)-停留時間")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d3
d3 <- ggplot(day_df, aes(date, day_stop_time), colours())+
geom_line(colour = "blue4")+
geom_point(colour = "blue4")+
ggtitle("全站報表(日)-停留時間")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(200, 400, 20))
d3
d4 <- ggplot(day_df, aes(date, jump_rate), colours())+
geom_line(colour = "red4")+
geom_point(colour = "red4")+
ggtitle("全站報表(日)-跳出率")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(75, 90, 5))
d4
d4 <- ggplot(day_df, aes(date, jump_rate), colours())+
geom_line(colour = "red4")+
geom_point(colour = "red4")+
ggtitle("全站報表(日)-跳出率")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(80, 90, 2))
d3
d4
d4 <- ggplot(day_df, aes(date, jump_rate), colours())+
geom_line(colour = "red4")+
geom_point(colour = "red4")+
ggtitle("全站報表(日)-跳出率")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(80, 90, 1))
d4
day_df <- data.frame(date, avg_brouse, vis_num, day_stop_time, jump_rate)
d1 <- ggplot(day_df, aes(date, avg_brouse), colours())+
geom_line(colour = "orange3")+
geom_point(colour = "orange3")+
ggtitle("全站報表(日)-每人平均瀏覽數")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("次數", breaks = seq(1, 5, 0.5))
d1
d1 <- ggplot(day_df, aes(date, avg_brouse), colours())+
geom_line(colour = "orange3")+
geom_point(colour = "orange3")+
ggtitle("全站報表(日)-每人平均瀏覽數")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("次數", breaks = seq(1, 5, 0.25))
d1
min(day_df$vis_num)
max(day_df$vis_num)
d2 <- ggplot(day_df, aes(date, vis_num), colours())+
geom_line(colour = "purple")+
geom_point(colour = "purple")+
ggtitle("全站報表(日)-到站人次")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間sec", breaks = seq(2000, 6000, 500))
d2
d1 <- ggplot(day_df, aes(date, avg_brouse), colours())+
geom_line(colour = "orange3")+
geom_point(colour = "orange3")+
ggtitle("全站報表(日)-每人平均瀏覽數")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("次數", breaks = seq(1, 5, 0.25))
d1
d2
d3
d4
d1 <- ggplot(day_df, aes(date, avg_brouse), colours())+
geom_line(colour = "orange3")+
geom_point(colour = "orange3")+
ggtitle("全站報表(日)-每人平均瀏覽數")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("次數", breaks = seq(1, 5, 0.25))
d2 <- ggplot(day_df, aes(date, vis_num), colours())+
geom_line(colour = "purple")+
geom_point(colour = "purple")+
ggtitle("全站報表(日)-到站人次")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("人次", breaks = seq(2000, 6000, 500))
d3 <- ggplot(day_df, aes(date, day_stop_time), colours())+
geom_line(colour = "blue4")+
geom_point(colour = "blue4")+
ggtitle("全站報表(日)-停留時間")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("停留時間(秒)", breaks = seq(200, 400, 20))
d4 <- ggplot(day_df, aes(date, jump_rate), colours())+
geom_line(colour = "red4")+
geom_point(colour = "red4")+
ggtitle("全站報表(日)-跳出率")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("日期", breaks = seq(1, 31, 3)) +
scale_y_continuous("跳出率(%)", breaks = seq(80, 90, 1))
d1
d2
d3
d4
d1
d2
hour <- c(1:23)
hour <- c(0:23)
hour
hour <- c(0:23)
avg_b <- c(1.97,1.96,1.97,1.90,1.99,1.84,1.77,1.76,1.91,2.01,2.11,2.13,2.03,2.11,2.16,2.12,2.14,2.11,1.96,1.96,2.02,2.07,2.03,2.02)
length(avg_b)
hours <- data.frame(hour, avg_b)
min(hours$avg_b)
max(hours$avg_b)
h1 <- ggplot(hours, aes(hour, avg_b), colours())+
geom_line(colour = "azure")+
geom_point(colour = "azure")+
ggtitle("全站報表(時)-每人平均瀏覽數")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("小時", breaks = seq(1, 31, 3)) +
scale_y_continuous("次數", breaks = seq(1.5, 2.5, 0.25))
h1
h1 <- ggplot(hours, aes(hour, avg_b), colours())+
geom_line(colour = "cyan1")+
geom_point(colour = "cyan1")+
ggtitle("全站報表(時)-每人平均瀏覽數")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("小時", breaks = seq(1, 31, 3)) +
scale_y_continuous("次數", breaks = seq(1.5, 2.5, 0.25))
h1
h1 <- ggplot(hours, aes(hour, avg_b), colours())+
geom_line(colour = "cyan1")+
geom_point(colour = "cyan1")+
ggtitle("全站報表(時)-每人平均瀏覽數")+
theme(plot.title = element_text(hjust = 0.5))+
scale_x_continuous("小時", breaks = seq(1, 31, 3)) +
scale_y_continuous("次數", breaks = seq(1.5, 2.5, 0.125))
h1
library(mem)
library(memoise)
shiny::runApp('GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB')
# ===== 文字雲程式 : 臉書文字雲
# ===== 處理丁守中1月至5月的文章
# ------------------------------------------
#
# 匯入套件
library(tibble)
library(dplyr)
library(tidyr)
library(data.table)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(magrittr)
library(RColorBrewer)
library(wordcloud)
setwd("~/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB")
data <- read.csv("Di_report.csv")
# 清除NA
data <- data %>% na.omit()
# 切開時間
data <- data %>% separate(time, c("year","month","day"),"-")
data <- data %>% separate(day, c("date","time"), "T")
# 排序
data <- data[with(data, order(year ,month, date)), ]
# 清理重複資料
data <- data[!duplicated(data$post), ]
# 移除2017資料
data <- data[data$year == "2018",]
row.names(data) = c(1:260) # 由資料數重新編排號碼
View(data)
data[1]
data$month <- data$month %>% as.numeric()
typeof(data$month)
df <- data.frame()
# 移除2017資料
data <- data[data$year == "2018",]
Di=c("Di 1","Di 2","Di 3","Di 4","Di 5","Di 6")
p <- read.table("Di 1")
getwd()
p <- read.table("Di 1.txt")
?read.table()
p <- read.table(file="Di 1.txt")
setwd("C:/Users/Weber/Documents/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB")
p <- read.table(file="Di 1. txt")
# ===== 文字雲程式 : 臉書文字雲
# ===== 處理丁守中1月至5月的文章
# ------------------------------------------
#
# 匯入套件
library(tibble)
library(dplyr)
library(tidyr)
library(data.table)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(magrittr)
library(RColorBrewer)
library(wordcloud)
# 匯入資料組
setwd("~/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB")
data <- read.csv("Di_report.csv")
# 清除NA
data <- data %>% na.omit()
# 切開時間
data <- data %>% separate(time, c("year","month","day"),"-")
data <- data %>% separate(day, c("date","time"), "T")
# 排序
data <- data[with(data, order(year ,month, date)), ]
# 清理重複資料
data <- data[!duplicated(data$post), ]
# 移除2017資料
data <- data[data$year == "2018",]
row.names(data) = c(1:260) # 由資料數重新編排號碼
# 依月份建立子資料組
Di1<- subset(data , data$month == "01", select = post)
Di2<- subset(data , data$month == "02", select = post)
Di3<- subset(data , data$month == "03", select = post)
Di4<- subset(data , data$month == "04", select = post)
Di5<- subset(data , data$month == "05", select = post)
Di6<- subset(data , data$month == "06", select = post)
# 儲存個月份的posts
save_txt <- function(DATA, x){
filename = paste("~/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB/Di_wordcloud/Di",x, ".txt")
write.table(DATA, file = filename, sep = "", col.names=FALSE,row.names=FALSE,quote=FALSE)
}
save_txt(Di1, 1)
save_txt(Di2, 2)
save_txt(Di3, 3)
save_txt(Di4, 4)
save_txt(Di5, 5)
save_txt(Di6, 6)
?paste()
# 儲存個月份的posts
save_txt <- function(DATA, x){
filename = paste("~/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB/Di_wordcloud/Di_",x, ".txt", sep = "")
write.table(DATA, file = filename, sep = "", col.names=FALSE,row.names=FALSE,quote=FALSE)
}
save_txt(Di1, 1)
save_txt(Di2, 2)
save_txt(Di3, 3)
save_txt(Di4, 4)
save_txt(Di5, 5)
save_txt(Di6, 6)
# 儲存個月份的posts
save_txt <- function(DATA, x){
filename = paste("~/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB/Di_",x, ".txt", sep = "")
write.table(DATA, file = filename, sep = "", col.names=FALSE,row.names=FALSE,quote=FALSE)
}
save_txt(Di1, 1)
save_txt(Di2, 2)
save_txt(Di3, 3)
save_txt(Di4, 4)
save_txt(Di5, 5)
save_txt(Di6, 6)
# ===== 文字雲程式 : 臉書文字雲
# ===== 處理姚文智1月至5月的文章
# ------------------------------------------
#
# 匯入套件
library(tibble)
library(dplyr)
library(tidyr)
library(data.table)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(magrittr)
library(RColorBrewer)
library(wordcloud)
# 匯入資料組
# setwd("/Users/Weber/Documents/GitHub/NTU-CSX-DataScience--Group5/Finalproject/FacebookAPI")
data <- read.csv("Yao_report.csv", encoding = "UTF-8")
# 清除NA
data <- data %>% na.omit()
# 切開時間
data <- data %>% separate(time, c("year","month","day"),"-")
data <- data %>% separate(day, c("date","time"), "T")
# 排序
data <- data[with(data, order(year ,month, date)), ]
# 清理重複資料
data <- data[!duplicated(data$post), ]
# 移除2017資料
data <- data[data$year == "2018",]
row.names(data) = c(1:235) # 由資料數重新編排號碼
# 儲存個月份的posts
save_txt <- function(DATA, x){
filename = paste("~/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB/Yao_",x , ".txt", sep = "")
write.table(DATA, file = filename, sep = "", col.names=FALSE,row.names=FALSE,quote=FALSE)
}
save_txt(Y1, 1)
save_txt(Y2, 2)
save_txt(Y3, 3)
save_txt(Y4, 4)
save_txt(Y5, 5)
save_txt(Y6, 6)
Y1<- subset(data , data$month == "01", select = post)
Y2<- subset(data , data$month == "02", select = post)
Y3<- subset(data , data$month == "03", select = post)
Y4<- subset(data , data$month == "04", select = post)
Y5<- subset(data , data$month == "05", select = post)
Y6<- subset(data , data$month == "06", select = post)
# 儲存個月份的posts
save_txt <- function(DATA, x){
filename = paste("~/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB/Yao_",x , ".txt", sep = "")
write.table(DATA, file = filename, sep = "", col.names=FALSE,row.names=FALSE,quote=FALSE)
}
save_txt(Y1, 1)
save_txt(Y2, 2)
save_txt(Y3, 3)
save_txt(Y4, 4)
save_txt(Y5, 5)
save_txt(Y6, 6)
# ===== 文字雲程式 : 臉書文字雲
# ===== 處理柯文哲1月至5月的文章
# ------------------------------------------
#
# 匯入套件
library(dplyr)
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(magrittr)
library(RColorBrewer)
library(wordcloud)
# 匯入資料組
# setwd("/Users/Weber/Documents/GitHub/NTU-CSX-DataScience--Group5/Finalproject/FacebookAPI")
data <- read.csv("Ko_report.csv")
data <- data %>% na.omit()
# 切開時間
data <- data %>% separate(time, c("year","month","day"),"-")
data <- data %>% separate(day, c("date","time"), "T")
# 排序
data <- data[with(data, order(year ,month, date)), ]
# 清理重複資料
data <- data[!duplicated(data$post), ]
# 移除2017資料
data <- data[data$year == "2018",]
row.names(data) = c(1:138) # 由資料數重新編排號碼
# 依月份建立子資料組
Ko1<- subset(data , data$month == "01", select = post)
Ko2<- subset(data , data$month == "02", select = post)
Ko3<- subset(data , data$month == "03", select = post)
Ko4<- subset(data , data$month == "04", select = post)
Ko5<- subset(data , data$month == "05", select = post)
Ko6<- subset(data , data$month == "06", select = post)
# 儲存個月份的posts
save_txt <- function(DATA, x){
filename = paste("~/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/FB/Ko_",x , ".txt", sep = "")
write.table(DATA, file = filename, sep = "", col.names=FALSE,row.names=FALSE,quote=FALSE)
}
save_txt(Ko1, 1)
save_txt(Ko2, 2)
save_txt(Ko3, 3)
save_txt(Ko4, 4)
save_txt(Ko5, 5)
save_txt(Ko6, 6)
read.table("Di 1.txt")
read.table("Di_1.txt")
