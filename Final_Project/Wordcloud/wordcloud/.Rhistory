}
}
# 半月變數加上原始月份，指定回資料表
halfmonth <- DATA$month + halfmonth
halfmonth <- halfmonth %>% as.factor()
# 把半月變數資料放回去data frame
DATA <- cbind(DATA,halfmonth)
return(DATA)
}
Di_report <- DataClean(Di_report)
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
return(count_cp)
}
test <- CountCP(Di_report,7)
test
test %>% t
test <- CountCP(Di_report,7)
test <- test %>% as.data.frame()
test
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上","六月下")
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
return(count_cp)
}
test <- CountCP(Di_report,7)
test
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上","六月下") %>% as.factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上","六月下"))
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
colnames(count_cp) <- c("month","CP")
return(count_cp)
}
test <- CountCP(Di_report,7)
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上","六月下") %>% as.factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上","六月下"))
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上","六月下")
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
count_cp$month <- count_cp$month %>% factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上","六月下"))
colnames(count_cp) <- c("month","CP")
return(count_cp)
}
test <- CountCP(Di_report,7)
test
Di_plot <- ggplot(test, aes(x=month, y=CP)) +
geom_bar(stat = "identity", fill = "green3") +
ggtitle("丁守中發文分被享比例(每半月)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.05))
Di_plot
Di_count_share_cp <- CountCP(Di_report,7)
Di_count_like_cp <- CountCP(Di_report,8)
Di_report[Di_report$halfmonth==6.5,]
Di_report[Di_report$halfmonth!=6.5,]
# 丁守中 2017-12-17 - 2018-6-16
Di_report <- read.csv("Di_report.csv")
source('~/GitHub/NTU-CSX-DataScience-group5/Final_Project/FB_API_Crawler/FaceBook_independent_study.R', encoding = 'UTF-8', echo=TRUE)
# 建立 function 進行資料清理
DataClean <- function(DATA){
# please input data frame
# Cut time variable
DATA <- DATA %>% separate(time, c("date","time"), "T")
DATA <- DATA %>% separate(date, c("year","month","day"), "-")
# Drop 2017 data
DATA <- DATA[DATA$year == "2018", ]
# 轉換為數值資料
DATA$month <- DATA$month %>% as.numeric()
DATA$day <- DATA$day %>% as.numeric()
# Exchage month and day to halfmonth
halfmonth <- c()
for(i in DATA$day>15) {
if (i==TRUE) {
halfmonth <- c(halfmonth,0.5)
}else{
halfmonth <- c(halfmonth,0)
}
}
# 半月變數加上原始月份，指定回資料表
halfmonth <- DATA$month + halfmonth
halfmonth <- halfmonth %>% as.factor()
# 把半月變數資料放回去data frame
DATA <- cbind(DATA,halfmonth)
# 清除6月半資料
DATA <- DATA[DATA$halfmonth!=6.5,]
return(DATA)
}
# 丁守中 2017-12-17 - 2018-6-16
Di_report <- read.csv("Di_report.csv")
# 建立 function 進行資料清理
DataClean <- function(DATA){
# please input data frame
# Cut time variable
DATA <- DATA %>% separate(time, c("date","time"), "T")
DATA <- DATA %>% separate(date, c("year","month","day"), "-")
# Drop 2017 data
DATA <- DATA[DATA$year == "2018", ]
# 轉換為數值資料
DATA$month <- DATA$month %>% as.numeric()
DATA$day <- DATA$day %>% as.numeric()
# Exchage month and day to halfmonth
halfmonth <- c()
for(i in DATA$day>15) {
if (i==TRUE) {
halfmonth <- c(halfmonth,0.5)
}else{
halfmonth <- c(halfmonth,0)
}
}
# 半月變數加上原始月份，指定回資料表
halfmonth <- DATA$month + halfmonth
halfmonth <- halfmonth %>% as.factor()
# 把半月變數資料放回去data frame
DATA <- cbind(DATA,halfmonth)
# 清除6月半資料
DATA <- DATA[DATA$halfmonth!=6.5,]
return(DATA)
}
Di_report <- DataClean(Di_report)
View(Di_report)
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上","六月下")
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
count_cp$month <- count_cp$month %>% factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上","六月下"))
colnames(count_cp) <- c("month","CP")
return(count_cp)
}
Di_count_share_cp <- CountCP(Di_report,7)
Di_count_like_cp <- CountCP(Di_report,8)
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上")
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
count_cp$month <- count_cp$month %>% factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上"))
colnames(count_cp) <- c("month","CP")
return(count_cp)
}
Di_count_share_cp <- CountCP(Di_report,7)
View(Di_count_like_cp)
# 丁守中 2017-12-17 - 2018-6-16
Di_report <- read.csv("Di_report.csv")
# 建立 function 進行資料清理
DataClean <- function(DATA){
# please input data frame
# Cut time variable
DATA <- DATA %>% separate(time, c("date","time"), "T")
DATA <- DATA %>% separate(date, c("year","month","day"), "-")
# Drop 2017 data
DATA <- DATA[DATA$year == "2018", ]
# 轉換為數值資料
DATA$month <- DATA$month %>% as.numeric()
DATA$day <- DATA$day %>% as.numeric()
# Exchage month and day to halfmonth
halfmonth <- c()
for(i in DATA$day>15) {
if (i==TRUE) {
halfmonth <- c(halfmonth,0.5)
}else{
halfmonth <- c(halfmonth,0)
}
}
# 半月變數加上原始月份，指定回資料表
halfmonth <- DATA$month + halfmonth
halfmonth <- halfmonth %>% as.factor()
# 把半月變數資料放回去data frame
DATA <- cbind(DATA,halfmonth)
# 清除6月半資料
DATA <- DATA[DATA$halfmonth!=6.5,]
return(DATA)
}
Di_report <- DataClean(Di_report)
DATA$halfmonth
Di_report $ halfmonth
# 丁守中 2017-12-17 - 2018-6-16
Di_report <- read.csv("Di_report.csv")
# 建立 function 進行資料清理
DataClean <- function(DATA){
# please input data frame
# Cut time variable
DATA <- DATA %>% separate(time, c("date","time"), "T")
DATA <- DATA %>% separate(date, c("year","month","day"), "-")
# Drop 2017 data
DATA <- DATA[DATA$year == "2018", ]
# 轉換為數值資料
DATA$month <- DATA$month %>% as.numeric()
DATA$day <- DATA$day %>% as.numeric()
# Exchage month and day to halfmonth
halfmonth <- c()
for(i in DATA$day>15) {
if (i==TRUE) {
halfmonth <- c(halfmonth,0.5)
}else{
halfmonth <- c(halfmonth,0)
}
}
# 半月變數加上原始月份，指定回資料表
halfmonth <- DATA$month + halfmonth
halfmonth <- halfmonth %>% as.factor()
# 把半月變數資料放回去data frame
DATA <- cbind(DATA,halfmonth)
# 清除6月半資料
DATA <- DATA[DATA$halfmonth!=6.5,]
levels(DATA$halfmonth) <- c(1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6)
return(DATA)
}
Di_report <- DataClean(Di_report)
library(dplyr)
library(NLP)
library(tidyr)
library(ggplot2)
# 丁守中 2017-12-17 - 2018-6-16
Di_report <- read.csv("Di_report.csv")
# 建立 function 進行資料清理
DataClean <- function(DATA){
# please input data frame
# Cut time variable
DATA <- DATA %>% separate(time, c("date","time"), "T")
DATA <- DATA %>% separate(date, c("year","month","day"), "-")
# Drop 2017 data
DATA <- DATA[DATA$year == "2018", ]
# 轉換為數值資料
DATA$month <- DATA$month %>% as.numeric()
DATA$day <- DATA$day %>% as.numeric()
# Exchage month and day to halfmonth
halfmonth <- c()
for(i in DATA$day>15) {
if (i==TRUE) {
halfmonth <- c(halfmonth,0.5)
}else{
halfmonth <- c(halfmonth,0)
}
}
# 半月變數加上原始月份，指定回資料表
halfmonth <- DATA$month + halfmonth
halfmonth <- halfmonth %>% as.factor()
# 把半月變數資料放回去data frame
DATA <- cbind(DATA,halfmonth)
# 清除6月半資料
DATA <- DATA[DATA$halfmonth!=6.5,]
return(DATA)
}
levels(DATA$halfmonth)
Di_report $ halfmonth
Di_report <- DataClean(Di_report)
source('~/GitHub/NTU-CSX-DataScience-group5/Final_Project/FB_API_Crawler/FaceBook_independent_study.R', encoding = 'UTF-8', echo=TRUE)
Di_report $ halfmonth
Di_report $ halfmonth
levels(DATA$halfmonth)
Di_report $ halfmonth %>% levels()
test <- Di_report $ halfmonth %>% levels()
test <- test[1:5]
test
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)[1,11]) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上")
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
count_cp$month <- count_cp$month %>% factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上"))
colnames(count_cp) <- c("month","CP")
return(count_cp)
}
Di_count_share_cp <- CountCP(Di_report,7)
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)[1:11]) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上")
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
count_cp$month <- count_cp$month %>% factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上"))
colnames(count_cp) <- c("month","CP")
return(count_cp)
}
Di_count_share_cp <- CountCP(Di_report,7)
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in (levels(DATA$halfmonth))[1:11]) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上")
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
count_cp$month <- count_cp$month %>% factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上"))
colnames(count_cp) <- c("month","CP")
return(count_cp)
}
Di_count_share_cp <- CountCP(Di_report,7)
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上")
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
count_cp$month <- count_cp$month %>% factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上"))
colnames(count_cp) <- c("month","CP")
return(count_cp)
}
Di_count_share_cp <- CountCP(Di_report,7)
DATA <- Di_report
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
for (i in levels(DATA$halfmonth)) {
count <- c(count,(DATA[DATA$halfmonth==i,7] %>% sum()))
}
count
count_cp <- count / (summary(DATA$halfmonth) %>% as.numeric())
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)[1:11]) {
count <- c(count,(DATA[DATA$halfmonth==i,7] %>% sum()))
}
count
summary(DATA$halfmonth)
count_cp <- count / (summary(DATA$halfmonth)[1:11] %>% as.numeric())
# 丁守中 2017-12-17 - 2018-6-16
Di_report <- read.csv("Di_report.csv")
# 建立 function 進行資料清理
DataClean <- function(DATA){
# please input data frame
# Cut time variable
DATA <- DATA %>% separate(time, c("date","time"), "T")
DATA <- DATA %>% separate(date, c("year","month","day"), "-")
# Drop 2017 data
DATA <- DATA[DATA$year == "2018", ]
# 轉換為數值資料
DATA$month <- DATA$month %>% as.numeric()
DATA$day <- DATA$day %>% as.numeric()
# Exchage month and day to halfmonth
halfmonth <- c()
for(i in DATA$day>15) {
if (i==TRUE) {
halfmonth <- c(halfmonth,0.5)
}else{
halfmonth <- c(halfmonth,0)
}
}
# 半月變數加上原始月份，指定回資料表
halfmonth <- DATA$month + halfmonth
halfmonth <- halfmonth %>% as.factor()
# 把半月變數資料放回去data frame
DATA <- cbind(DATA,halfmonth)
# 清除6月半資料
DATA <- DATA[DATA$halfmonth!=6.5,]
return(DATA)
}
Di_report <- DataClean(Di_report)
CountCP <- function(DATA,index){
# index = 7 : share, 8 : like
count = c()
for (i in levels(DATA$halfmonth)[1:11]) {
count <- c(count,(DATA[DATA$halfmonth==i,index] %>% sum()))
}
count_cp <- count / (summary(DATA$halfmonth)[1:11] %>% as.numeric())
month <- c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上")
count_cp <- count_cp %>% as.data.frame()
count_cp <- cbind(month,count_cp)
count_cp$month <- count_cp$month %>% factor(.,levels = c("一月上","一月下","二月上","二月下","三月上","三月下","四月上","四月下","五月上","五月下","六月上"))
colnames(count_cp) <- c("month","CP")
return(count_cp)
}
Di_count_share_cp <- CountCP(Di_report,7)
View(Di_count_share_cp)
Di_count_like_cp <- CountCP(Di_report,8)
Di_count_like_cp
Di_share_plot <- ggplot(Di_count_share_cp, aes(x=month, y=CP)) +
geom_bar(stat = "identity", fill = "green3") +
ggtitle("丁守中發文分被享比例(每半月)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.05))
Di_share_plot
View(Di_count_like_cp)
Di_like_plot <- ggplot(Di_count_like_cp, aes(x=month, y=CP)) +
geom_bar(stat = "identity", fill = "green3") +
ggtitle("丁守中發文被按讚比例(每半月)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.05))
Di_like_plot
setwd("~/GitHub")
setwd("~/GitHub/R-shiny-Wordcloud")
setwd("~/wordcloud")
books <<- list("A Mid Summer Night's Dream" = "summer",
"The Merchant of Venice" = "merchant",
"Romeo and Juliet" = "romeo")
# Using "memoise" to automatically cache the results
getTermMatrix <- memoise(function(book) {
# Careful not to let just any name slip in here; a
# malicious user could manipulate this value.
if (!(book %in% books))
stop("Unknown book")
text <- readLines(sprintf("./%s.txt.gz", book),
encoding="UTF-8")
myCorpus = Corpus(VectorSource(text))
myCorpus = tm_map(myCorpus, content_transformer(tolower))
myCorpus = tm_map(myCorpus, removePunctuation)
myCorpus = tm_map(myCorpus, removeNumbers)
myCorpus = tm_map(myCorpus, removeWords,
c(stopwords("SMART"), "thy", "thou", "thee", "the", "and", "but"))
myDTM = TermDocumentMatrix(myCorpus,
control = list(minWordLength = 1))
m = as.matrix(myDTM)
sort(rowSums(m), decreasing = TRUE)
})
library(memoise)
library(wordcloud)
library(tm)
# The list of valid books
books <<- list("A Mid Summer Night's Dream" = "summer",
"The Merchant of Venice" = "merchant",
"Romeo and Juliet" = "romeo")
# Using "memoise" to automatically cache the results
getTermMatrix <- memoise(function(book) {
# Careful not to let just any name slip in here; a
# malicious user could manipulate this value.
if (!(book %in% books))
stop("Unknown book")
text <- readLines(sprintf("./%s.txt.gz", book),
encoding="UTF-8")
myCorpus = Corpus(VectorSource(text))
myCorpus = tm_map(myCorpus, content_transformer(tolower))
myCorpus = tm_map(myCorpus, removePunctuation)
myCorpus = tm_map(myCorpus, removeNumbers)
myCorpus = tm_map(myCorpus, removeWords,
c(stopwords("SMART"), "thy", "thou", "thee", "the", "and", "but"))
myDTM = TermDocumentMatrix(myCorpus,
control = list(minWordLength = 1))
m = as.matrix(myDTM)
sort(rowSums(m), decreasing = TRUE)
})
# Using "memoise" to automatically cache the results
getTermMatrix <- memoise(function(book) {
# Careful not to let just any name slip in here; a
# malicious user could manipulate this value.
if (!(book %in% books))
stop("Unknown book")
text <- readLines(sprintf("./%s.txt.gz", book),
encoding="UTF-8")
myCorpus = Corpus(VectorSource(text))
myCorpus = tm_map(myCorpus, content_transformer(tolower))
myCorpus = tm_map(myCorpus, removePunctuation)
myCorpus = tm_map(myCorpus, removeNumbers)
myCorpus = tm_map(myCorpus, removeWords,
c(stopwords("SMART"), "thy", "thou", "thee", "the", "and", "but"))
myDTM = TermDocumentMatrix(myCorpus,
control = list(minWordLength = 1))
m = as.matrix(myDTM)
sort(rowSums(m), decreasing = TRUE)
})
shiny::runApp()
shiny::runApp()
getTermMatrix("A Mid Summer Night's Dream")
getTermMatrix("A Mid Summer Night's Dream")
shiny::runApp()
View(books)
shiny::runApp()
library(tm)
install.packages("tm")
library(tm)
install.packages("slam")
setwd("~/GitHub/NTU-CSX-DataScience-group5/Final_Project/Wordcloud/wordcloud")
shiny::runApp()
